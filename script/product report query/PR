/*
===================================================================================
Product report
===================================================================================
Purpose :
	- This report consolidates key product metrics and behaviors

Highlights:
	1. Gathers essential fileds such as product name, category, subcategory, and cost.
	2. Segment products by revenue to identify High-performaners, Mid- range, or low performers.
	3. Aggregates product-level metrics:
		-total orders
		-total sales
		-total quantity sold
		-total customers(unique)
		-lifespan(in month)
	4. Calculates valuables KPIs:
		- recency (month since last sales)
		-average order revenue (AOR)
		-averaeg monthly revenue

	=======================================================================================
 */
 
CREATE VIEW gold.report_product AS 
WITH base_query AS (
	/* .............................................................................................................................
	1). Base Query: Retrieves core columns from fact_sales and dim_products....................................................................... */

	SELECT
	s.order_number,
	s.order_date,
	s.customer_key,
	s.sales,
	s.quantity,
	p.product_key,
	p.product_name,
	p.category,
	p.subcategory,
	p.product_cost
	FROM gold.fact_sales s
	LEFT JOIN gold.dim_products p
	ON s.product_key = p.product_key
	WHERE order_date IS NOT NULL
	),
	products_aggregration as (
 
	/* ..................................................................
	2). Products Aggregration: Summarizes key metrics at product level....................................................................... */
 
SELECT
	product_key,
	product_name,
	category,
	subcategory,
	product_cost,
	DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) as lifespan,
	COUNT(DISTINCT order_number) AS total_orders,
	SUM(sales) as total_sales,
	COUNT(DISTINCT customer_key) as total_customers,
	MAX(order_date) as last_order,
	SUM(quantity) as total_quantity,
	ROUND(AVG(CAST(sales AS FLOAT)/ NULLIF(quantity, 0)), 1) as avg_selling_price
FROM base_query
GROUP BY
	product_key,
	product_name,
	category,
	subcategory,
	product_cost
	)

	/* ..................................................................
	3). final query: combines all product report into an output ....................................................................... */
 
SELECT
	product_key,
	product_name,
	category,
	subcategory,
	product_cost,
	DATEDIFF(month, last_order, GETDATE()) AS recency_in_month,
	CASE WHEN total_sales > 50000 THEN 'High performance'
		WHEN total_sales >= 10000 THEN 'Mid performance'
		ELSE 'Low performance'
	END AS product_seg,
	lifespan,
	total_customers,
	total_orders,
	total_quantity,
	avg_selling_price,
-- Average order revenue (AOR)
 CASE WHEN total_orders = 0 THEN 0
	ELSE total_sales / total_orders
END  AS avg_order_revenue,
-- Average monthly revenue
 CASE WHEN lifespan = 0 THEN total_sales
	ELSE total_sales / lifespan
END  AS avg_monthly_revenue

FROM products_aggregration
